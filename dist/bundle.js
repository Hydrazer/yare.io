(()=>{var p=Math.pow;function n(t,e){return p(t[0]-e[0],2)+p(t[1]-e[1],2)}function P(t,e){return[t[0]-e[0],t[1]-e[1]]}function D(t,e){return[t[0]/e,t[1]/e]}function m(t,e,s){let r=P(t,e),u=Math.sqrt(p(r[0],2)+p(r[1],2)),y=D(r,u),f=[Math.floor(y[0]*s),Math.floor(y[1]*s)];return[f[0]+e[0],f[1]+e[1]]}function c(t,e){let s=n(spirits[t[0]].position,e),r=spirits[t[0]];for(enemy of t){let u=n(spirits[enemy].position,e);u<s&&(s=u,r=spirits[enemy])}return r}function b(t,e){let s=n(t[0].position,e),r=t[0];for(enemy of t){let u=n(enemy.position,e);u<s&&(s=u,r=enemy)}return r}function q(t){let e=0;for(enemy of t)e+=spirits[enemy].energy;return e}{n(base.position,star_zxq.position)<n(base.position,star_a1c.position)?(memory.base_star=star_zxq,memory.enemy_star=star_a1c):(memory.base_star=star_a1c,memory.enemy_star=star_zxq),all_spirits=[];for(x of Object.keys(spirits))all_spirits.push(spirits[x]);enemy_spirits=all_spirits.filter(o=>o.hp==1).filter(o=>o.player_id!="saltAxAtlas"),friendly_spirits=all_spirits.filter(o=>o.hp==1).filter(o=>o.player_id=="saltAxAtlas");let t=friendly_spirits.length,e=outpost.control,s=m(outpost.position,star_p89.position,199),r=m(memory.base_star.position,base.position,190),u=m(memory.base_star.position,r,180),y=m(memory.base_star.position,u,150),f=m(outpost.position,base.position,50),w=m(star_p89.position,enemy_base.position,300),h=0;if(enemy_spirits.length==0&&(h=1),h==0){let o=1,g=2,v=15,z=10;e!="saltAxAtlas"&&e!=""&&(o=0,g=0);let l=Math.floor((t-o-g)/3);l>5&&(l=5);let k=l,A=l,M=l;for(unit of friendly_spirits)o?(memory[unit.id]=="outpost_harvesting"&&unit.energy!=unit.energy_capacity?memory[unit.id]="outpost_harvesting":unit.energy>10?memory[unit.id]="harasser":memory[unit.id]="outpost_harvesting",o-=1):g?((memory[unit.id]=="base_defender"||memory[unit.id]=="base_charging"||memory[unit.id]=="base_harvesting")&&(memory[unit.id]="outpost_harvesting"),outpost.sight.enemies.length>0&&unit.energy==unit.energy_capacity&&outpost.energy>700||outpost.sight.enemies.length>0&&memory[unit.id]=="outpost_defender"?memory[unit.id]="outpost_defender":(memory[unit.id]=="outpost_defender"&&(memory[unit.id]="outpost_harvesting"),unit.energy>=20&&outpost.energy<1e3?memory[unit.id]="outpost_charging":unit.energy<20||unit.energy<unit.energy_capacity&&outpost.energy==outpost.energy_capacity?memory[unit.id]="outpost_harvesting":unit.energy==unit.energy_capacity&&(memory[unit.id]="outpost_do_nothing")),g-=1):v?(base.sight.enemies.length>0?memory[unit.id]="base_defender":k?(memory[unit.id]="base_pipe_1",k-=1):A?(memory[unit.id]="base_pipe_2",A-=1):M&&(memory[unit.id]="base_pipe_3",M-=1),v-=1):z?(base.sight.enemies.length>0?memory[unit.id]="base_defender":memory[unit.id]="base_def",z-=1):memory[unit.id]="attacker";let O=my_spirits.filter(i=>i.hp==1).filter(i=>memory[i.id]=="base_pipe_1"),N=my_spirits.filter(i=>i.hp==1).filter(i=>memory[i.id]=="base_pipe_2");console.log(O.length),console.log(N.length);for(unit of friendly_spirits){if(memory[unit.id]=="harasser"){let i=unit.sight.enemies.length,_=!1;if(i>0){let B=q(unit.sight.enemies),a=c(unit.sight.enemies,unit.position),d=n(unit.position,a.position);d<=41e3?(unit.move(a.position),unit.energize(a)):B>=unit.energy/2&&d<9e4?_=!0:d>4e4&&unit.energy>a.energy?(unit.move(a.position),unit.energize(a)):d>41e3&&unit.energy<=a.energy&&(_=!0),_&&(unit.shout("RUN!"),unit.move(m(unit.position,a.position,400)),_=!1)}else unit.shout("Blocking Spawn!"),unit.move(w)}else if(memory[unit.id]=="outpost_defender"){unit.shout("Defend Outpost!");let i=c(outpost.sight.enemies,unit.position);if(n(unit.position,i.position)>4e4){unit.move(i.position);continue}unit.energize(i)}else if(memory[unit.id]=="outpost_charging")unit.shout("Outpost!"),unit.move(s),unit.energize(outpost),outpost.energy+=unit.size;else if(memory[unit.id]=="outpost_harvesting")unit.shout("Outpost!"),unit.move(s),unit.energize(unit);else if(memory[unit.id]=="outpost_do_nothing")unit.shout("I'm Bored!"),unit.move(s);else if(memory[unit.id]=="base_defender"){unit.shout("Defend Base!");let i=c(base.sight.enemies,unit.position);if(n(unit.position,i.position)>4e4){unit.move(i.position);continue}unit.energize(i)}else if(memory[unit.id]=="base_def")unit.shout("Idle!"),unit.move(f);else if(memory[unit.id]=="base_pipe_1")unit.shout("Pipe 1!"),unit.move(r),unit.energy>20&&unit.energize(base);else if(memory[unit.id]=="base_pipe_2")unit.shout("Pipe 2!"),unit.move(u),unit.energy>20;else if(memory[unit.id]=="base_pipe_3")unit.shout("Pipe 3!"),unit.move(y),unit.energy>20||unit.energize(unit);else if(memory[unit.id]=="attacker")if(e!="saltAxAtlas"&&e!=""){unit.move(outpost.position);let i=b(enemy_spirits,unit.position);n(unit.position,i.position)<4e4?unit.energize(i):n(unit.position,outpost.position)<4e4&&unit.energize(outpost)}else{unit.move(enemy_base.position);let i=b(enemy_spirits,unit.position);n(unit.position,i.position)<4e4?unit.energize(i):n(unit.position,enemy_base.position)<4e4&&unit.energize(enemy_base)}console.log(unit.last_energized)}}else if(h==1){ready_spirits=friendly_spirits.filter(o=>o.energy==o.energy_capacity).length;for(unit of friendly_spirits)if(unit.energy==unit.energy_capacity&&ready_spirits==t?memory[unit.id]="attacking":memory[unit.id]!="attacking"&&(memory[unit.id]="harvesting"),memory[unit.id]=="attacking"){if(unit.shout("NUKE!"),4e4<n(unit.position,enemy_base.position)){unit.move(enemy_base.position);continue}unit.energize(enemy_base)}else if(memory[unit.id]=="harvesting"){if(unit.shout("Charging!"),e=="saltAxAtlas"||e=="")unit.move(s);else if(4e4<n(unit.position,memory.base_star.position)){unit.move(memory.base_star.position);continue}if(unit.energy==unit.energy_capacity)continue;unit.energize(unit)}}else for(unit of friendly_spirits)unit.shout("WTF! 0 or 1!")}})();
